trigger:
  branches:
    include:
    - main
    - develop

variables:
  # Agent VM image name
  vmImageName: 'ubuntu-latest'
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '0ea48d35-4539-47a0-8bc7-059824f4dc6c'
  imageRepository: 'darshubfrontend'
  containerRegistry: 'dhacr01.azurecr.io'
  dockerfilePath: 'frontend/Dockerfile'
  
  # master branch -->  production builds
  ${{ if eq(variables['Build.SourceBranchName'], 'main') }}:
    buildConfig: "production"
    tag: 'production'
  # develop branch --> development builds
  ${{ if eq(variables['Build.SourceBranchName'], 'develop') }}:
    buildConfig: "develop"
    tag: 'develop'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build image 
      inputs:
        command: build
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        arguments: '--build-arg envname=$buildConfig'
        tags: |
          $(tag)
    - task: Docker@2
      displayName: Push an image to container registry
      inputs:
        command: push
        repository: $(imageRepository)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
